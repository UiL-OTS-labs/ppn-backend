name: Django Tests

on:
  push:
    branches: [ develop, master, ]
  pull_request:
    branches: [ develop, master, ]

jobs:
  build:
    runs-on: ubuntu-latest
    continue-on-error: false
    strategy:
      max-parallel: 2
      matrix:
        python-version: [3.9, '3.10']
        app: ['backend', 'frontend']

    steps:
      - name: Install OS dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libldap2-dev libsasl2-dev libssl-dev gettext poppler-utils poppler-data libpoppler-cpp-dev
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          cd ${{ matrix.app }}
          pip install -r requirements.txt
          pip install flake8 pytest
      - name: pip freeze
        run: |
          pip freeze
      - name: Lint with flake8
        run: |
          cd ${{ matrix.app }}
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Compile 18n
        run: |
          cd ${{ matrix.app }}
          python manage.py compilemessages
      - name: Check for missing migrations
        run: |
          cd ${{ matrix.app }}
          python manage.py makemigrations --check --dry-run
      - name: Run Tests
        run: |
          cd ${{ matrix.app }}
          python manage.py test

  integration:
    needs: build
    runs-on: ubuntu-latest
    continue-on-error: false

    strategy:
      matrix:
        python-version: ['3.9', '3.10']

    steps:
      - name: Install OS dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libldap2-dev libsasl2-dev libssl-dev gettext poppler-utils poppler-data libpoppler-cpp-dev xmlsec1
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          cd frontend
          pip install -r requirements.txt
          cd ../backend
          pip install -r requirements.txt
      - name: Compile 18n
        run: |
          cd backend
          python manage.py compilemessages
      - name: Compile 18n
        run: |
          cd frontend
          python manage.py compilemessages
      - name: Integration tests
        run: |
          cd integration_tests
          pip install -r requirements.txt
          playwright install
          export DJANGO_ALLOW_ASYNC_UNSAFE=1
          pytest --tracing retain-on-failure
      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: integration-pytest_logs
          path: integration_tests/test-results
